<?xml version="1.0" encoding="UTF-8"?>

<!-- example of compile-time generation -->
<project name="clasbuilder.generator" default="gendemo" basedir=".">
	
	<!-- destination directory for generated java-files -->
	<property name="src" location="gen/src" />
	
	<!-- destination directory for generated class-files -->
	<property name="bin" location="gen/bin" />
	
	<!-- example target -->
	<target name="gendemo">
		<!-- classpath, which contains classbuilder.jar and all super-classes with @Handler annotations -->
		<path id="gen.class.path">
			<pathelement path="bin" />
			<pathelement path="classbuilder-1.2.0.jar" />
		</path>
		<!-- generating classes -->
		<genclasses src="${src}" bin="${bin}" filter="classbuilder.demo.handler.**.Test*" classpath="gen.class.path" />
	</target>
	
	<!-- makro for class generation -->
	<macrodef name="genclasses">
		<!-- destination directory for generated java-files -->
		<attribute name="src" />
		<!-- destination directory for generated class-files -->
		<attribute name="bin" />
		<!-- filter expression, which selects all super-classes with @Handler annotations -->
		<attribute name="filter" default="**.*" />
		<!-- classpath, which contains classbuilder.jar and all super-classes with @Handler annotations -->
		<attribute name="classpath" />
		<sequential>
			<!-- runs main-method of classbuilder.handler.Generator -->
			<java classname="classbuilder.handler.Generator" failonerror="true" fork="true">
				<arg value="-s"/><arg value="@{src}" />
				<arg value="-d"/><arg value="@{bin}" />
				<arg value="-f"/><arg value="@{filter}" />
				<classpath refid="@{classpath}"/>
			</java>
		</sequential>
	</macrodef>
	
</project>